.row {
  // Set the max width to 1140px (standard today)
  // If the viewport width is below 1140px, it use 100% of the viewport
  // max-width: 114rem;
  width: $grid-width;
  background-color: #eee;
  margin: 0 auto;

  // :not pseudo-class: select everything except ...
  // Add vertical gutter to every child except the last child
  // .row:not(:last-child)
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  // .row .col-1-of-2
  .col-1-of-2 {
    // mixs units when use calc()
    // Sass variables must be placed inside #{} to use calc() function in css
    width: calc((100% - #{$gutter-horizontal}) / 2);
    background-color: orange;
    float: left;

    // Every child expect the last child will have the horizontal gutter of $gutter-horizontal
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  // Select any class starts with "col-" inside the row container
  // .row [class^="col-"]
  [class^="col-"] {
    background-color: orange;
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  // .row .col-1-of-3
  .col-1-of-3 {
    width: calc((100% - 2 *#{$gutter-horizontal}) / 3);
  }

  // .row .col-2-of-3
  // two times of .col-1-of-3 plus one horizontal gutter
  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 *#{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  // .row .col-1-of-4
  .col-1-of-4 {
    width: calc((100% - 3 *#{$gutter-horizontal}) / 4);
  }

  // .row .col-2-of-4
  // two times of .col-1-of-4 plus one horizontal gutter
  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 *#{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  // .row .col-3-of-4
  // three times of .col-1-of-4 plus two horizontal gutters
  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 *#{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }

  // Clear fix mixins
  // Apply clearfix method to the .row parrent which contains float elements
  // .row::after
  @include clearfix;
}
